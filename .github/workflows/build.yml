name: Build and Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  Windows:
    name: Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go 1.22.6
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.6'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            **/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          mkdir -p output
          go build -o output/CloudflareST.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: CloudflareST-windows
          path: ./output/CloudflareST.exe

  Linux:
    name: Linux
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go 1.22.6
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.6'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            **/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          mkdir -p output
          go build -o output/CloudflareST

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: CloudflareST-linux
          path: ./output/CloudflareST

  release:
    name: Release
    needs: [Windows, Linux]
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: CloudflareST-windows
          path: output/

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: CloudflareST-linux
          path: output/

      - name: Generate Unique Tag
        id: generate_tag
        run: echo "RELEASE_TAG=v1.0.0-${{ github.run_id }}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          body: "Release body"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/CloudflareST.exe
          asset_name: CloudflareST.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/CloudflareST
          asset_name: CloudflareST_linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
